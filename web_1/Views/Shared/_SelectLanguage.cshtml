﻿@using Microsoft.AspNetCore.Builder;
@using Microsoft.AspNetCore.Localization;
@using Microsoft.AspNetCore.Http.Features;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.Extensions.Options;

@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> options

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultures = options.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<head>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">

    <style>
        .custom-select {
            position: relative;
            width: 100%;
        }

            .custom-select i.material-icons {
                position: absolute;
                top: 50%;
                left: 10px; /* Adjust the left position based on your preference */
                transform: translateY(-50%);
                pointer-events: none;
            }

            .custom-select select {
                padding-left: 50px; /* Adjust the padding to leave space for the icon */
            }
    </style>
</head>
<div>
    <form method="post" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl">
        <div class="custom-select">
            <i class="material-icons">language</i>
            <select name="culture"
                    asp-for="@requestCulture.RequestCulture.UICulture.Name"
                    asp-items="cultures"
                    onchange="this.form.submit();"
                    class="form-select" aria-label="Disabled select example">
            </select>
        </div>
    </form>
</div>

